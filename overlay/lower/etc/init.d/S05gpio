#!/bin/sh

. /etc/init.d/rc.common

# Path to the GPIO configuration file
CONFIG_FILE="/etc/gpio.conf"

# Function to process GPIO commands
process_gpio_command() {
	case "$1" in
		set)
			gpio set "$2"
			;;
		clear)
			gpio clear "$2"
			;;
		*)
			echo "Invalid GPIO command"
			return 1
			;;
	esac
	return 0
}

# Function to process ingenic commands
process_ingenic_command() {
	# Calculate the group and pin from the GPIO number
	group=$(($1 / 32))
	pin=$(($1 % 32))

	# Convert the group number to a group letter (A, B, C, etc.)
	group_letter=$(printf "\\$(printf '%03o' $((group + 65)))")

	# The rest of the arguments are passed as-is
	shift 1 # Remove the first argument (gpio_num) before passing to ingenic-gpio

	ingenic-gpio "p$group_letter$pin" "$@"
	return 0
}

# Function to read and process the config file
process_config_file() {
	success=1

	# Check if the configuration file exists
	[ ! -f "$CONFIG_FILE" ] && die 1 "GPIO configuration file not found!"

	# Read the configuration file line by line
	while IFS= read -r line || [ -n "$line" ]; do
		# Ignore comments and empty lines
		if [ -z "$line" ] || [ "${line#\#}" != "$line" ]; then
			continue
		fi

		# Split the line into arguments
		set -- $line

		# Process the command
		case "$1" in
			gpio)
				process_gpio_command "$2" "$3" || success=0
				;;
			ingenic)
				process_ingenic_command "$2" "$3" "$4" "$5" "$6" || success=0
				;;
			*)
				echo "Unknown command: $1"
				success=0
				;;
		esac
	done < $CONFIG_FILE

	[ $success -eq 1 ] && ok || fail
}

# Main script execution
case "$1" in
	start)
		starting
		process_config_file
		;;
	stop | restart | reload)
		true
		;;
	*)
		die 1 "Usage: $0 {start}"
		;;
esac

exit 0
